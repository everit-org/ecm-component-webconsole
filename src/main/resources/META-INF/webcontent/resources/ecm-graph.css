/**
 * Copyright (C) 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
body {
    font: 300 14px 'Helvetica Neue', Helvetica;
}

.node circle, .node ellipse, .node rect {
    stroke: #333;
}

.edgePath path {
    stroke: #333;
    stroke-width: 1.5px;
}

.arrowhead {
    fill: #333;
}

g.componentstate-ACTIVE>circle, g.componentstate-ACTIVE>rect {
    fill: #D2ED9E;
}

g.componentstate-ACTIVE.guessed>circle, g.componentstate-ACTIVE.guessed>rect {
    fill: #FCF8E3;
}

g.componentstate-ACTIVE>circle:hover, g.componentstate-ACTIVE>.label:hover, g.componentstate-ACTIVE>rect:hover {
    opacity: 0.3;
    transition: opacity 0.5s;
}

g.componentstate-FAILED>circle, g.componentstate-FAILED>rect, g.componentstate-FAILED_PERMANENT>circle, g.componentstate_FAILED_PERMANENT>rect
    {
    fill: #F2DEDE;
}

g.componentstate-UNSATISFIED>circle, g.componentstate-UNSATISFIED>rect {
    fill: #FCF8E3;
}

g.componentstate-STARTING>rect, g.componentstate-STOPPING>rect {
    fill: #D9EDF7;
}

g.componentstate-STARTING>circle, g.componentstate-STOPPING>circle {
    fill: #FCF8E3;
}

g.componentstate-STARTING.guessed>circle, g.componentstate-STOPPING.guessed>circle {
    fill: #FCF8E3;
}

g>ellipse {
  fill: #D2ED9E;
}

g.node.missing>ellipse, g.node.missing>circle {
  fill: #FFFFFF;
}

.node text {
    pointer-events: none;
}

.hovering {
    opacity: 0.3;
}

.node.blood.hovered circle, .node.blood.hovered rect, .node.blood.hovered ellipse{
  opacity: 1;
}
.node.hovered circle, .node.hovered rect, .node.hovered ellipse{
  opacity: 0.1;
}
.edgePath.hovered.blood path {
  stroke: black;
  opacity: 1;
}
.edgePath.hovered path {
  opacity: 0.1;
}
.edgeLabel.hovered.blood{
	 opacity: 1;
}
.edgeLabel.hovered{
	 opacity: 0.1;
}
.node.hovered div *{
	color: rgba(0,0,0,0.1);
}
.node.blood.hovered div *{
	color: rgba(0,0,0,1);
}
.node.blood.hovered.closestNeighbours circle, .node.blood.hovered.closestNeighbours rect, .node.blood.hovered.closestNeighbours ellipse{
	stroke: darkblue;
	stroke-width: 3;
}
.edgePath.hovered.blood.closestNeighbours path {
    stroke: darkblue;
	stroke-width: 3;
	fill: darkblue;
}	